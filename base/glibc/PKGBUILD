# description	: GNU libc C library
# depends	: tzdata linux-api-headers

pkgname=glibc
pkgver=2.42
pkgrel=1
source=(https://mirror.lyrahosting.com/gnu/glibc//$pkgname-$pkgver.tar.xz
        https://www.linuxfromscratch.org/patches/lfs/12.4/glibc-$pkgver-fhs-1.patch
        reenable_DT_HASH.patch 
        ld.so.conf)
nostrip="lib.*/ld-.*\.so$ lib.*/libc-.*\.so$ lib.*/libpthread-.*\.so$ lib.*/libthread_db-.*\.so$"	

build() {

    mkdir -p glibc-build lib32-glibc-build

    [ -d glibc-$pkgver ] && ln -s glibc-$pkgver glibc
    cd glibc


    # which relies on DT_HASH to be present in these libs.
    # reconsider 2023-01
    patch -Np1 -i "$srcdir"/reenable_DT_HASH.patch

    patch -Np1 -i ../glibc-$pkgver-fhs-1.patch

    # Now fix a security vulnerability
    sed -e '/unistd.h/i #include <string.h>' \
        -e '/libc_rwlock_init/c\
    __libc_rwlock_define_initialized (, reset_lock);\
    memcpy (&lock, &reset_lock, sizeof (lock));' \
        -i stdlib/abort.c 

    # Keep only the UTF-8 locales...
    supported=./localedata/SUPPORTED
    sed -nr '/^(#|SUPPORTED-LOCALES=|.*\/UTF-8)/p' $supported > $supported.new
    mv -v $supported.new $supported

    cd "$srcdir"/glibc-build

    echo 'int main(){}' > dummy.c
    
    if ( gcc -march=$MMARCH -dM -E  dummy.c   |  grep "__AVX2__" );then
        export ASFLAGS="-D__AVX__=1 -D__AVX2__=1 -msse2avx -D__FMA__=1 "
    fi

    export CFLAGS="-O3 -g1 -march=$MMARCH -m64  -Wl,-z,max-page-size=0x1000 -fPIC"
    export ASFLAGS="-D__AVX__=1 -D__AVX2__=1 -msse2avx -D__FMA__=1 "
    unset LDFLAGS
    export LDFLAGS="-Wl,-z,max-page-size=0x1000 "

    CC="gcc -m64 " \
    "$srcdir"/glibc/configure \
        --prefix=/usr \
        --libdir=/usr/lib \
        --disable-werror \
        --enable-bind-now \
		--enable-fortify-source \
        --enable-cet \
        --enable-kernel=4.19 \
        --enable-stack-protector=strong \
        --disable-nscd \
        libc_cv_slibdir=/usr/lib \
        --build=x86_64-pc-linux-gnu \
        --host=x86_64-pc-linux-gnu
    make

    export CFLAGS="-O3 -g1 -march=$MMARCH -m32  -Wl,-z,max-page-size=0x1000 -fPIC"
    unset ASFLAGS
    unset LDFLAGS
    export LDFLAGS="-Wl,-z,max-page-size=0x1000 "


    cd "$srcdir"/lib32-glibc-build

    CC="gcc -m32 -mstackrealign" \
    CXX="g++ -m32 -mstackrealign" \
    "$srcdir"/glibc/configure \
        --prefix=/usr \
        --libdir=/usr/lib32 \
        --disable-werror \
        --enable-bind-now \
		--enable-fortify-source \
        --enable-kernel=4.19 \
        --enable-stack-protector=strong \
        --disable-nscd \
        --build=i686-pc-linux-gnu \
        --host=i686-pc-linux-gnu  \
        --target=i686-pc-linux-gnu  \
        --disable-cet \
        libc_cv_slibdir=/usr/lib32 
    make

    cd "$srcdir"/glibc-build

    unset LDFLAGS
    unset CFLAGS

    make install DESTDIR="$pkgdir" install_root="$pkgdir"

    make -s -O localedata/install-locales install DESTDIR="$pkgdir" install_root="$pkgdir"

    ## Generate UTF-8 locale-related data
    make -s -O  localedata/install-locale-files DESTDIR="$pkgdir" install_root="$pkgdir"
    for origpath in "$pkgdir"/usr/lib/locale/*.utf8*; do
        rename -v .utf8 .UTF-8 "$origpath"
    done

    # Reduce footprint of localedata, since `make localedata/install-locale-files`
    # passes the `--no-hard-links` option to `localedef`.
    hardlink "$pkgdir"/usr/lib/locale

    mv "$pkgdir"/sbin/* "$pkgdir"/usr/sbin/
    rm -rf "$pkgdir"/sbin

    # for oracle db installer (compat link)
    ln -sf libpthread.a "$pkgdir"/usr/lib/libpthread_nonshared.a

    install -Dm644 "$srcdir"/ld.so.conf "$pkgdir"/etc/ld.so.conf

    mkdir -pv "$pkgdir"/etc/ld.so.conf.d

    # Fix hardcoded path to the executable loader in ldd script
    sed '/RTLDLIST=/s@/usr@@g' -i "$pkgdir"/usr/bin/ldd

    cd "$srcdir"/lib32-glibc-build

    make DESTDIR=$PWD/DESTDIR install_root=$PWD/DESTDIR install
    mkdir -pv "$pkgdir"/usr/lib32/ "$pkgdir"/usr/include/gnu/ "$pkgdir"/lib
    cp -a DESTDIR/usr/lib32/* "$pkgdir"/usr/lib32/
    install -vm644 DESTDIR/usr/include/gnu/lib-names-32.h \
                "$pkgdir"/usr/include/gnu/
    install -vm644 DESTDIR/usr/include/gnu/stubs-32.h \
                "$pkgdir"/usr/include/gnu/
    ln -svf ../lib32/ld-linux.so.2 "$pkgdir"/usr/lib/ld-linux.so.2

    mkdir -p "$pkgdir"/lib64
    ln -sfv ../usr/lib/ld-linux-x86-64.so.2 "$pkgdir"/lib64
    ln -sfv ../usr/lib/ld-linux-x86-64.so.2 "$pkgdir"/lib64/ld-lsb-x86-64.so.3
}
