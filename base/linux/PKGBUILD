# description	: Linux Kernel
# depends	: linux-firmware openssl cpio bc initramfs
# depends	: elfutils libnvme harfbuzz

pkgname=linux
pkgver=6.16.8
pkgrel=1
options=(!strip)
_srcvers=$pkgver.arch1
_srctag=v${_srcvers%.*}-${_srcvers##*.}
source=(https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/linux-${pkgver%.*}.tar.xz
        x86_64-dotconfig)

export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

[ "${pkgver##*.}" != 0 ] && source=(${source[@]}  https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/patch-${pkgver}.xz)

NO_STRIP=yes


build() {
    cd $pkgname-${pkgver%.*}

	xzcat $srcdir/patch-$pkgver.xz | patch -sNp1 -F0

	make mrproper


	# thanks to voidlinux for kernel config
	[ -f "$srcdir"/config ] && cp "$srcdir"/config .config || cp  "$srcdir"/x86_64-dotconfig .config

	make olddefconfig

	make menuconfig

	kernver=$pkgver-$pkgname

	#make menuconfig

	# Defines build options exporting the value/values for the KCFLAGS and KCPPFLAGS before calling make.
	# More info: https://docs.kernel.org/kbuild/kbuild.html
	export KCFLAGS="-O3 -march=$MMARCH -pipe -mno-avx2 -O3 -fno-tree-vectorize -mpopcnt "
	export KCPPFLAGS="-O3 -march=$MMARCH -pipe -mno-avx2 -O3 -fno-tree-vectorize -mpopcnt "


	make bzImage modules
	make INSTALL_MOD_PATH="$pkgdir" modules_install

	mkdir -p "$pkgdir"/boot

	cp  arch/x86/boot/bzImage "$pkgdir"/boot/vmlinuz-$pkgname
	cp .config "$pkgdir"/boot/config-$pkgname

	make clean
	make prepare

	rm -rf "$pkgdir"/lib/firmware

	for file in $(ls arch); do
		case $file in
			x86|Kconfig) continue ;;
			*) rm -fr arch/$file ;;
		esac
	done

	# strip down sources
	# don't package the kernel in the sources directory
	find . -name "*Image" -exec rm "{}" \;
	find . -name "*.cmd" -exec rm -f "{}" \; 
	rm -f .*.d

	rm -fr firmware ipc .config.old .version .cocciconfig \
		.get_maintainer.ignore .gitattributes .gitignore .mailmap \
		COPYING CREDITS MAINTAINERS README Documentation
	find . -name ".gitignore" -exec rm "{}" \;
	for dir in block certs crypto drivers fs init kernel lib mm net samples security sound usr virt; do
		find $dir -type f \( -name "*.c" -o -name "*.h" \) -exec rm "{}" \;
	done
	for i in $(ls tools); do
		[ "$i" = "objtool" ] || rm -fr tools/$i
	done
	for i in $(ls tools/objtool); do
		[ "$i" = "objtool" ] || rm -fr tools/objtool/$i
	done

	rm "$pkgdir"/lib/modules/$kernver/build 
	mv "$srcdir"/linux-${pkgver%.*} "$pkgdir"/lib/modules/$kernver/build
	ln -sv build "$pkgdir"/lib/modules/$kernver/source

	# remove now broken symlinks
	find -L "$pkgdir"/lib/modules/$kernver/build -type l -exec rm -f "{}" \;
}